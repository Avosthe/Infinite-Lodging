@page
@model SSDAssignment40.Pages.Support.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Posts</h2>

<p>
    <a asp-page="Create">Create New Post</a>
</p>
<form>
    <p>
        Request Title: <input type="text" placeholder="search for request" name="SearchString">
        <input type="submit" value="Filter" />
        <input type="submit" value="Clear"/>
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CustomerSupport[0].Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerSupport[0].DateTimeStamp)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerSupport[0].Request)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerSupport[0].NoReplies)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.CustomerSupport) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTimeStamp)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Request)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NoReplies)
            </td>
            <td>
                    @inject UserManager<Lodger> userManager
                <a asp-page="./Details" asp-route-id="@item.CustomerSupport_ID">Go To Thread</a> |
                @{ 
                    var user = await userManager.GetUserAsync(User);
                }
                @if (item.Lodger.Id == user.Id)
                {
                <a asp-page="./Edit" asp-route-id="@item.CustomerSupport_ID">Edit</a> <label>|</label>
                <a asp-page="./Delete" asp-route-id="@item.CustomerSupport_ID">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
